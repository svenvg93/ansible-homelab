---
# Maintenance role: system updates, cleanup, disk checks, and reporting

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
  when: maintenance_update_packages | default(true)

- name: Upgrade all packages
  ansible.builtin.apt:
    upgrade: dist
  when: maintenance_update_packages | default(true)

- name: Autoremove unused packages
  ansible.builtin.apt:
    autoremove: true
  when: maintenance_cleanup | default(true)

- name: Clean apt cache
  ansible.builtin.apt:
    autoclean: true
  when: maintenance_cleanup | default(true)

- name: Update beszel agent
  ansible.builtin.command: /opt/beszel-agent/beszel-agent update
  register: beszel_agent_update
  changed_when: beszel_agent_update.rc == 0 and 'updated' in beszel_agent_update.stdout | lower
  failed_when: beszel_agent_update.rc != 0
  notify: Restart beszel-agent

- name: Clean APT cache (extra)
  ansible.builtin.apt:
    autoclean: true
  when: maintenance_cleanup | default(true)

- name: Prune Docker unused images, containers, and volumes
  community.docker.docker_prune:
    images: true
    containers: true
    volumes: true
    networks: true
  when:
    - maintenance_docker_prune | default(true)
    - ansible_facts.packages is defined
    - docker in ansible_facts.packages

- name: Vacuum old journal logs older than {{ maintenance_journal_vacuum_days }} days
  ansible.builtin.command: journalctl --vacuum-time={{ maintenance_journal_vacuum_days }}d
  become: true
  changed_when: false
  when: maintenance_journal_vacuum | default(true)

- name: Remove old log files in /var/log older than {{ maintenance_log_age_days }} days
  ansible.builtin.find:
    paths: /var/log
    age: "{{ maintenance_log_age_days }}d"
    recurse: true
  register: old_logs
  when: maintenance_log_cleanup | default(true)

- name: Delete old log files
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ old_logs.files }}"
  when:
    - maintenance_log_cleanup | default(true)
    - old_logs.matched > 0
  no_log: true

# (Optional) Add more tasks for log cleanup, service checks, etc.

- name: Check if reboot is required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required

- name: Notify reboot if required
  ansible.builtin.meta: flush_handlers
  when: reboot_required.stat.exists
